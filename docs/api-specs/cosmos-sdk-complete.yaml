openapi: 3.0.3
info:
  title: Cosmos SDK REST API
  description: Complete REST API reference for all Cosmos SDK modules
  version: 1.0.0
  contact:
    name: Cosmos SDK Documentation
    url: https://docs.cosmos.network
servers:
- url: https://rest.cosmos.network
  description: Cosmos Network Mainnet
- url: https://testnet-rest.cosmos.network
  description: Cosmos Network Testnet
- url: http://localhost:1317
  description: Local Development
paths:
  /cometbft/abci/v2/echo:
    post:
      tags:
      - Cometbft
      summary: Echo
      description: Echo operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_Echo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/flush:
    post:
      tags:
      - Cometbft
      summary: Flush
      description: Flush operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_Flush
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/info:
    post:
      tags:
      - Cometbft
      summary: Info
      description: Info operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_Info
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/checktx:
    post:
      tags:
      - Cometbft
      summary: CheckTx
      description: CheckTx operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_CheckTx
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/query:
    post:
      tags:
      - Cometbft
      summary: Query
      description: Query operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_Query
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/commit:
    post:
      tags:
      - Cometbft
      summary: Commit
      description: Commit operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_Commit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/initchain:
    post:
      tags:
      - Cometbft
      summary: InitChain
      description: InitChain operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_InitChain
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/listsnapshots:
    post:
      tags:
      - Cometbft
      summary: ListSnapshots
      description: ListSnapshots operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_ListSnapshots
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/offersnapshot:
    post:
      tags:
      - Cometbft
      summary: OfferSnapshot
      description: OfferSnapshot operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_OfferSnapshot
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/loadsnapshotchunk:
    post:
      tags:
      - Cometbft
      summary: LoadSnapshotChunk
      description: LoadSnapshotChunk operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_LoadSnapshotChunk
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/applysnapshotchunk:
    post:
      tags:
      - Cometbft
      summary: ApplySnapshotChunk
      description: ApplySnapshotChunk operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_ApplySnapshotChunk
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/prepareproposal:
    post:
      tags:
      - Cometbft
      summary: PrepareProposal
      description: PrepareProposal operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_PrepareProposal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/processproposal:
    post:
      tags:
      - Cometbft
      summary: ProcessProposal
      description: ProcessProposal operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_ProcessProposal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/extendvote:
    post:
      tags:
      - Cometbft
      summary: ExtendVote
      description: ExtendVote operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_ExtendVote
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/verifyvoteextension:
    post:
      tags:
      - Cometbft
      summary: VerifyVoteExtension
      description: VerifyVoteExtension operation for cometbft module (ABCIService
        service)
      operationId: cometbft_ABCIService_VerifyVoteExtension
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cometbft/abci/v2/finalizeblock:
    post:
      tags:
      - Cometbft
      summary: FinalizeBlock
      description: FinalizeBlock operation for cometbft module (ABCIService service)
      operationId: cometbft_ABCIService_FinalizeBlock
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/store/streaming/abci/listenfinalizeblock:
    post:
      tags:
      - Store
      summary: ListenFinalizeBlock
      description: ListenFinalizeBlock operation for store module (ABCIListenerService
        service)
      operationId: store_ABCIListenerService_ListenFinalizeBlock
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/store/streaming/abci/listencommit:
    post:
      tags:
      - Store
      summary: ListenCommit
      description: ListenCommit operation for store module (ABCIListenerService service)
      operationId: store_ABCIListenerService_ListenCommit
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/crisis/v1beta1/verifyinvariant:
    post:
      tags:
      - Crisis
      summary: VerifyInvariant
      description: VerifyInvariant operation for crisis module (Msg service)
      operationId: crisis_Msg_VerifyInvariant
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/crisis/v1beta1/updateparams:
    post:
      tags:
      - Crisis
      summary: UpdateParams
      description: UpdateParams operation for crisis module (Msg service)
      operationId: crisis_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/benchmark/v1/loadtest:
    post:
      tags:
      - Benchmark
      summary: LoadTest
      description: LoadTest operation for benchmark module (Msg service)
      operationId: benchmark_Msg_LoadTest
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/reflection/v1/filedescriptors:
    post:
      tags:
      - Reflection
      summary: FileDescriptors
      description: FileDescriptors operation for reflection module (ReflectionService
        service)
      operationId: reflection_ReflectionService_FileDescriptors
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/evidence/v1beta1/evidence:
    get:
      tags:
      - Evidence
      summary: Evidence
      description: Evidence operation for evidence module (Query service)
      operationId: evidence_Query_Evidence
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/evidence/v1beta1/submitevidence:
    post:
      tags:
      - Evidence
      summary: SubmitEvidence
      description: SubmitEvidence operation for evidence module (Msg service)
      operationId: evidence_Msg_SubmitEvidence
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/gov/v1beta1/submitproposal:
    post:
      tags:
      - Gov
      summary: SubmitProposal
      description: SubmitProposal operation for gov module (Msg service)
      operationId: gov_Msg_SubmitProposal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/gov/v1beta1/vote:
    post:
      tags:
      - Gov
      summary: Vote
      description: Vote operation for gov module (Msg service)
      operationId: gov_Msg_Vote
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/gov/v1beta1/voteweighted:
    post:
      tags:
      - Gov
      summary: VoteWeighted
      description: VoteWeighted operation for gov module (Msg service)
      operationId: gov_Msg_VoteWeighted
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/gov/v1beta1/proposal:
    get:
      tags:
      - Gov
      summary: Proposal
      description: Proposal operation for gov module (Query service)
      operationId: gov_Query_Proposal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/gov/v1beta1/constitution:
    get:
      tags:
      - Gov
      summary: Constitution
      description: Constitution operation for gov module (Query service)
      operationId: gov_Query_Constitution
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/app/v1alpha1/config:
    get:
      tags:
      - App
      summary: Config
      description: Config operation for app module (Query service)
      operationId: app_Query_Config
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/distribution/v1beta1/setwithdrawaddress:
    post:
      tags:
      - Distribution
      summary: SetWithdrawAddress
      description: SetWithdrawAddress operation for distribution module (Msg service)
      operationId: distribution_Msg_SetWithdrawAddress
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/distribution/v1beta1/withdrawdelegatorreward:
    post:
      tags:
      - Distribution
      summary: WithdrawDelegatorReward
      description: WithdrawDelegatorReward operation for distribution module (Msg
        service)
      operationId: distribution_Msg_WithdrawDelegatorReward
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/distribution/v1beta1/withdrawvalidatorcommission:
    post:
      tags:
      - Distribution
      summary: WithdrawValidatorCommission
      description: WithdrawValidatorCommission operation for distribution module (Msg
        service)
      operationId: distribution_Msg_WithdrawValidatorCommission
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/distribution/v1beta1/fundcommunitypool:
    post:
      tags:
      - Distribution
      summary: FundCommunityPool
      description: FundCommunityPool operation for distribution module (Msg service)
      operationId: distribution_Msg_FundCommunityPool
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/distribution/v1beta1/updateparams:
    post:
      tags:
      - Distribution
      summary: UpdateParams
      description: UpdateParams operation for distribution module (Msg service)
      operationId: distribution_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/distribution/v1beta1/params:
    get:
      tags:
      - Distribution
      summary: Params
      description: Params operation for distribution module (Query service)
      operationId: distribution_Query_Params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/feegrant/v1beta1/grantallowance:
    post:
      tags:
      - Feegrant
      summary: GrantAllowance
      description: GrantAllowance operation for feegrant module (Msg service)
      operationId: feegrant_Msg_GrantAllowance
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/feegrant/v1beta1/revokeallowance:
    post:
      tags:
      - Feegrant
      summary: RevokeAllowance
      description: RevokeAllowance operation for feegrant module (Msg service)
      operationId: feegrant_Msg_RevokeAllowance
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/feegrant/v1beta1/pruneallowances:
    post:
      tags:
      - Feegrant
      summary: PruneAllowances
      description: PruneAllowances operation for feegrant module (Msg service)
      operationId: feegrant_Msg_PruneAllowances
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/feegrant/v1beta1/allowance:
    get:
      tags:
      - Feegrant
      summary: Allowance
      description: Allowance operation for feegrant module (Query service)
      operationId: feegrant_Query_Allowance
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/slashing/v1beta1/unjail:
    post:
      tags:
      - Slashing
      summary: Unjail
      description: Unjail operation for slashing module (Msg service)
      operationId: slashing_Msg_Unjail
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/slashing/v1beta1/updateparams:
    post:
      tags:
      - Slashing
      summary: UpdateParams
      description: UpdateParams operation for slashing module (Msg service)
      operationId: slashing_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/slashing/v1beta1/params:
    get:
      tags:
      - Slashing
      summary: Params
      description: Params operation for slashing module (Query service)
      operationId: slashing_Query_Params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/auth/v1beta1/accounts:
    get:
      tags:
      - Auth
      summary: Accounts
      description: Accounts operation for auth module (Query service)
      operationId: auth_Query_Accounts
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/auth/v1beta1/updateparams:
    post:
      tags:
      - Auth
      summary: UpdateParams
      description: UpdateParams operation for auth module (Msg service)
      operationId: auth_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/params/v1beta1/params:
    get:
      tags:
      - Params
      summary: Params
      description: Params operation for params module (Query service)
      operationId: params_Query_Params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/base/reflection/v1beta1/listallinterfaces:
    post:
      tags:
      - Base
      summary: ListAllInterfaces
      description: ListAllInterfaces operation for base module (ReflectionService
        service)
      operationId: base_ReflectionService_ListAllInterfaces
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/base/reflection/v1beta1/getauthndescriptor:
    get:
      tags:
      - Base
      summary: GetAuthnDescriptor
      description: GetAuthnDescriptor operation for base module (ReflectionService
        service)
      operationId: base_ReflectionService_GetAuthnDescriptor
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/base/reflection/v1beta1/getnodeinfo:
    get:
      tags:
      - Base
      summary: GetNodeInfo
      description: GetNodeInfo operation for base module (Service service)
      operationId: base_Service_GetNodeInfo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/base/reflection/v1beta1/config:
    post:
      tags:
      - Base
      summary: Config
      description: Config operation for base module (Service service)
      operationId: base_Service_Config
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/consensus/v1/params:
    get:
      tags:
      - Consensus
      summary: Params
      description: Params operation for consensus module (Query service)
      operationId: consensus_Query_Params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/consensus/v1/updateparams:
    post:
      tags:
      - Consensus
      summary: UpdateParams
      description: UpdateParams operation for consensus module (Msg service)
      operationId: consensus_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/epochs/v1beta1/epochinfos:
    get:
      tags:
      - Epochs
      summary: EpochInfos
      description: EpochInfos operation for epochs module (Query service)
      operationId: epochs_Query_EpochInfos
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/group/v1/groupinfo:
    get:
      tags:
      - Group
      summary: GroupInfo
      description: GroupInfo operation for group module (Query service)
      operationId: group_Query_GroupInfo
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/group/v1/creategroup:
    post:
      tags:
      - Group
      summary: CreateGroup
      description: CreateGroup operation for group module (Msg service)
      operationId: group_Msg_CreateGroup
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/updategroupmembers:
    post:
      tags:
      - Group
      summary: UpdateGroupMembers
      description: UpdateGroupMembers operation for group module (Msg service)
      operationId: group_Msg_UpdateGroupMembers
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/updategroupadmin:
    post:
      tags:
      - Group
      summary: UpdateGroupAdmin
      description: UpdateGroupAdmin operation for group module (Msg service)
      operationId: group_Msg_UpdateGroupAdmin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/updategroupmetadata:
    post:
      tags:
      - Group
      summary: UpdateGroupMetadata
      description: UpdateGroupMetadata operation for group module (Msg service)
      operationId: group_Msg_UpdateGroupMetadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/creategrouppolicy:
    post:
      tags:
      - Group
      summary: CreateGroupPolicy
      description: CreateGroupPolicy operation for group module (Msg service)
      operationId: group_Msg_CreateGroupPolicy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/creategroupwithpolicy:
    post:
      tags:
      - Group
      summary: CreateGroupWithPolicy
      description: CreateGroupWithPolicy operation for group module (Msg service)
      operationId: group_Msg_CreateGroupWithPolicy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/updategrouppolicyadmin:
    post:
      tags:
      - Group
      summary: UpdateGroupPolicyAdmin
      description: UpdateGroupPolicyAdmin operation for group module (Msg service)
      operationId: group_Msg_UpdateGroupPolicyAdmin
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/updategrouppolicydecisionpolicy:
    post:
      tags:
      - Group
      summary: UpdateGroupPolicyDecisionPolicy
      description: UpdateGroupPolicyDecisionPolicy operation for group module (Msg
        service)
      operationId: group_Msg_UpdateGroupPolicyDecisionPolicy
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/updategrouppolicymetadata:
    post:
      tags:
      - Group
      summary: UpdateGroupPolicyMetadata
      description: UpdateGroupPolicyMetadata operation for group module (Msg service)
      operationId: group_Msg_UpdateGroupPolicyMetadata
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/submitproposal:
    post:
      tags:
      - Group
      summary: SubmitProposal
      description: SubmitProposal operation for group module (Msg service)
      operationId: group_Msg_SubmitProposal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/withdrawproposal:
    post:
      tags:
      - Group
      summary: WithdrawProposal
      description: WithdrawProposal operation for group module (Msg service)
      operationId: group_Msg_WithdrawProposal
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/vote:
    post:
      tags:
      - Group
      summary: Vote
      description: Vote operation for group module (Msg service)
      operationId: group_Msg_Vote
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/exec:
    post:
      tags:
      - Group
      summary: Exec
      description: Exec operation for group module (Msg service)
      operationId: group_Msg_Exec
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/group/v1/leavegroup:
    post:
      tags:
      - Group
      summary: LeaveGroup
      description: LeaveGroup operation for group module (Msg service)
      operationId: group_Msg_LeaveGroup
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/upgrade/v1beta1/currentplan:
    get:
      tags:
      - Upgrade
      summary: CurrentPlan
      description: CurrentPlan operation for upgrade module (Query service)
      operationId: upgrade_Query_CurrentPlan
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/upgrade/v1beta1/softwareupgrade:
    post:
      tags:
      - Upgrade
      summary: SoftwareUpgrade
      description: SoftwareUpgrade operation for upgrade module (Msg service)
      operationId: upgrade_Msg_SoftwareUpgrade
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/autocli/v1/appoptions:
    get:
      tags:
      - Autocli
      summary: AppOptions
      description: AppOptions operation for autocli module (Query service)
      operationId: autocli_Query_AppOptions
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/staking/v1beta1/validators:
    get:
      tags:
      - Staking
      summary: Validators
      description: Validators operation for staking module (Query service)
      operationId: staking_Query_Validators
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/staking/v1beta1/createvalidator:
    post:
      tags:
      - Staking
      summary: CreateValidator
      description: CreateValidator operation for staking module (Msg service)
      operationId: staking_Msg_CreateValidator
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/staking/v1beta1/editvalidator:
    post:
      tags:
      - Staking
      summary: EditValidator
      description: EditValidator operation for staking module (Msg service)
      operationId: staking_Msg_EditValidator
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/staking/v1beta1/delegate:
    post:
      tags:
      - Staking
      summary: Delegate
      description: Delegate operation for staking module (Msg service)
      operationId: staking_Msg_Delegate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/staking/v1beta1/beginredelegate:
    post:
      tags:
      - Staking
      summary: BeginRedelegate
      description: BeginRedelegate operation for staking module (Msg service)
      operationId: staking_Msg_BeginRedelegate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/staking/v1beta1/undelegate:
    post:
      tags:
      - Staking
      summary: Undelegate
      description: Undelegate operation for staking module (Msg service)
      operationId: staking_Msg_Undelegate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/staking/v1beta1/cancelunbondingdelegation:
    post:
      tags:
      - Staking
      summary: CancelUnbondingDelegation
      description: CancelUnbondingDelegation operation for staking module (Msg service)
      operationId: staking_Msg_CancelUnbondingDelegation
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/bank/v1beta1/send:
    post:
      tags:
      - Bank
      summary: Send
      description: Send operation for bank module (Msg service)
      operationId: bank_Msg_Send
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/bank/v1beta1/multisend:
    post:
      tags:
      - Bank
      summary: MultiSend
      description: MultiSend operation for bank module (Msg service)
      operationId: bank_Msg_MultiSend
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/bank/v1beta1/updateparams:
    post:
      tags:
      - Bank
      summary: UpdateParams
      description: UpdateParams operation for bank module (Msg service)
      operationId: bank_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/bank/v1beta1/balance:
    get:
      tags:
      - Bank
      summary: Balance
      description: Balance operation for bank module (Query service)
      operationId: bank_Query_Balance
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/nft/v1beta1/send:
    post:
      tags:
      - Nft
      summary: Send
      description: Send operation for nft module (Msg service)
      operationId: nft_Msg_Send
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/nft/v1beta1/balance:
    get:
      tags:
      - Nft
      summary: Balance
      description: Balance operation for nft module (Query service)
      operationId: nft_Query_Balance
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/mint/v1beta1/params:
    get:
      tags:
      - Mint
      summary: Params
      description: Params operation for mint module (Query service)
      operationId: mint_Query_Params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/mint/v1beta1/updateparams:
    post:
      tags:
      - Mint
      summary: UpdateParams
      description: UpdateParams operation for mint module (Msg service)
      operationId: mint_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/authz/v1beta1/grants:
    get:
      tags:
      - Authz
      summary: Grants
      description: Grants operation for authz module (Query service)
      operationId: authz_Query_Grants
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/authz/v1beta1/grant:
    post:
      tags:
      - Authz
      summary: Grant
      description: Grant operation for authz module (Msg service)
      operationId: authz_Msg_Grant
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/authz/v1beta1/exec:
    post:
      tags:
      - Authz
      summary: Exec
      description: Exec operation for authz module (Msg service)
      operationId: authz_Msg_Exec
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/authz/v1beta1/revoke:
    post:
      tags:
      - Authz
      summary: Revoke
      description: Revoke operation for authz module (Msg service)
      operationId: authz_Msg_Revoke
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/counter/v1/getcount:
    get:
      tags:
      - Counter
      summary: GetCount
      description: GetCount operation for counter module (Query service)
      operationId: counter_Query_GetCount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/counter/v1/increasecount:
    post:
      tags:
      - Counter
      summary: IncreaseCount
      description: IncreaseCount operation for counter module (Msg service)
      operationId: counter_Msg_IncreaseCount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/protocolpool/v1/fundcommunitypool:
    post:
      tags:
      - Protocolpool
      summary: FundCommunityPool
      description: FundCommunityPool operation for protocolpool module (Msg service)
      operationId: protocolpool_Msg_FundCommunityPool
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/protocolpool/v1/communitypoolspend:
    post:
      tags:
      - Protocolpool
      summary: CommunityPoolSpend
      description: CommunityPoolSpend operation for protocolpool module (Msg service)
      operationId: protocolpool_Msg_CommunityPoolSpend
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/protocolpool/v1/createcontinuousfund:
    post:
      tags:
      - Protocolpool
      summary: CreateContinuousFund
      description: CreateContinuousFund operation for protocolpool module (Msg service)
      operationId: protocolpool_Msg_CreateContinuousFund
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/protocolpool/v1/cancelcontinuousfund:
    post:
      tags:
      - Protocolpool
      summary: CancelContinuousFund
      description: CancelContinuousFund operation for protocolpool module (Msg service)
      operationId: protocolpool_Msg_CancelContinuousFund
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/protocolpool/v1/updateparams:
    post:
      tags:
      - Protocolpool
      summary: UpdateParams
      description: UpdateParams operation for protocolpool module (Msg service)
      operationId: protocolpool_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/protocolpool/v1/communitypool:
    get:
      tags:
      - Protocolpool
      summary: CommunityPool
      description: CommunityPool operation for protocolpool module (Query service)
      operationId: protocolpool_Query_CommunityPool
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/circuit/v1/authorizecircuitbreaker:
    post:
      tags:
      - Circuit
      summary: AuthorizeCircuitBreaker
      description: AuthorizeCircuitBreaker operation for circuit module (Msg service)
      operationId: circuit_Msg_AuthorizeCircuitBreaker
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/circuit/v1/tripcircuitbreaker:
    post:
      tags:
      - Circuit
      summary: TripCircuitBreaker
      description: TripCircuitBreaker operation for circuit module (Msg service)
      operationId: circuit_Msg_TripCircuitBreaker
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/circuit/v1/resetcircuitbreaker:
    post:
      tags:
      - Circuit
      summary: ResetCircuitBreaker
      description: ResetCircuitBreaker operation for circuit module (Msg service)
      operationId: circuit_Msg_ResetCircuitBreaker
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/circuit/v1/account:
    get:
      tags:
      - Circuit
      summary: Account
      description: Account operation for circuit module (Query service)
      operationId: circuit_Query_Account
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /cosmos/tx/v1beta1/simulate:
    post:
      tags:
      - Tx
      summary: Simulate
      description: Simulate operation for tx module (Service service)
      operationId: tx_Service_Simulate
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/vesting/v1beta1/createvestingaccount:
    post:
      tags:
      - Vesting
      summary: CreateVestingAccount
      description: CreateVestingAccount operation for vesting module (Msg service)
      operationId: vesting_Msg_CreateVestingAccount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /cosmos/vesting/v1beta1/createpermanentlockedaccount:
    post:
      tags:
      - Vesting
      summary: CreatePermanentLockedAccount
      description: CreatePermanentLockedAccount operation for vesting module (Msg
        service)
      operationId: vesting_Msg_CreatePermanentLockedAccount
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /ethermint/evm/v1/account:
    get:
      tags:
      - Evm
      summary: Account
      description: Account operation for evm module (Query service)
      operationId: evm_Query_Account
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /ethermint/evm/v1/ethereumtx:
    post:
      tags:
      - Evm
      summary: EthereumTx
      description: EthereumTx operation for evm module (Msg service)
      operationId: evm_Msg_EthereumTx
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
  /ethermint/feemarket/v1/params:
    get:
      tags:
      - Feemarket
      summary: Params
      description: Params operation for feemarket module (Query service)
      operationId: feemarket_Query_Params
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      parameters:
      - name: height
        in: query
        description: Block height to query
        required: false
        schema:
          type: string
      - name: prove
        in: query
        description: Include merkle proof in response
        required: false
        schema:
          type: boolean
          default: false
  /ethermint/feemarket/v1/updateparams:
    post:
      tags:
      - Feemarket
      summary: UpdateParams
      description: UpdateParams operation for feemarket module (Msg service)
      operationId: feemarket_Msg_UpdateParams
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: object
        '400':
          $ref: '#/components/responses/Error'
        '404':
          $ref: '#/components/responses/Error'
        '500':
          $ref: '#/components/responses/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: object
components:
  schemas: {}
  responses:
    Error:
      description: Error response
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              details:
                type: array
                items:
                  type: object
tags:
- name: Cometbft
  description: Cometbft module operations
- name: Store
  description: Store module operations
- name: Crisis
  description: Crisis module operations
- name: Benchmark
  description: Benchmark module operations
- name: Reflection
  description: Reflection module operations
- name: Evidence
  description: Evidence module operations
- name: Gov
  description: Gov module operations
- name: App
  description: App module operations
- name: Distribution
  description: Distribution module operations
- name: Feegrant
  description: Feegrant module operations
- name: Slashing
  description: Slashing module operations
- name: Auth
  description: Auth module operations
- name: Params
  description: Params module operations
- name: Base
  description: Base module operations
- name: Consensus
  description: Consensus module operations
- name: Epochs
  description: Epochs module operations
- name: Group
  description: Group module operations
- name: Upgrade
  description: Upgrade module operations
- name: Autocli
  description: Autocli module operations
- name: Staking
  description: Staking module operations
- name: Bank
  description: Bank module operations
- name: Nft
  description: Nft module operations
- name: Mint
  description: Mint module operations
- name: Authz
  description: Authz module operations
- name: Counter
  description: Counter module operations
- name: Protocolpool
  description: Protocolpool module operations
- name: Circuit
  description: Circuit module operations
- name: Tx
  description: Tx module operations
- name: Vesting
  description: Vesting module operations
- name: Evm
  description: Evm module operations
- name: Feemarket
  description: Feemarket module operations
